#include<iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
    Node(int data)
    {
        this->data=data;
        this->next=NULL;
    }
};
void insertAtBeg(Node* &head,int d)
{
    Node* temp=new Node(d);
    temp->next=head;
    head=temp;
}
void insertAtTail(Node* &tail,int d)
{
    Node* temp=new Node(d);
    tail->next=temp;
    tail=temp;

}
void insertAtAnyposition(Node* &tail,Node* &head,int pos,int d)
{
    if(pos==1)
    {
        insertAtBeg(head,d);
        return;
    }
    Node* temp=head;
    int cnt=1;
    while(cnt<=pos-1)
    {
        temp=temp->next;
        cnt++;
    }
    Node* insertnode=new Node(d);
    insertnode ->next=temp->next;
    temp->next=insertnode;
    if(temp->next==NULL)
    {
        insertAtTail(tail,d);
        return;
    }


}
void deleteNode(Node* &head,int pos)
{
    if(pos==1)
    {
        Node* temp=head;
        head=head->next;
        temp->next=NULL;
        delete temp;

    }
    else{
        int cnt=1;
        Node* curr=head;
        Node* prev=NULL;
        while(cnt<pos)
        {
            prev=curr;
            curr=curr->next;
            cnt++;

        }
        prev->next=curr->next;
        curr->next=NULL;
        delete curr;


    }
}
void print(Node* &head)
{
    Node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}
int main()
{
    Node * node1=new Node(10);
    Node* head=node1;
    Node* tail=head;
    insertAtBeg(head, 11);
   insertAtBeg(head, 12);
   insertAtBeg(head, 13);                            
   insertAtBeg(head, 14);
   insertAtTail(tail,14);
   insertAtTail(tail,15);
   insertAtTail(tail,16);
   insertAtTail(tail,17);
   insertAtAnyposition(tail,head,5,18);
   deleteNode(head,6);

   
  
    print(head); 
   
}
